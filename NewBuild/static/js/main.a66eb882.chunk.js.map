{"version":3,"sources":["components/newTransaction.js","components/viewTransaction.js","Router.js","App.js","index.js"],"names":["NewTransaction","porps","state","client","value","establishment","description","errorMensage","transactions","this","setState","JSON","parse","localStorage","getItem","e","console","log","preventDefault","validEmptyField","isValidCPF","cpf","replace","length","resto","soma","i","parseInt","substring","saveTransaction","a","newTransaction","saveStorage","setItem","stringify","notify","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","newestOnTop","rtl","pauseOnFocusLoss","onSubmit","handleSubmit","label","customInput","TextField","onChange","target","format","prefix","decimalSeparator","decimalScale","allowNegative","Button","variant","color","type","to","style","href","Component","serachEstablishment","showListTransaction","bind","getStorage","array","splice","map","item","key","onClick","newArray","list","placeholder","id","estabelecimento","Router","exact","path","component","ViewTransaction","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a66eb882.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport \"../styles/NewTransaction.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass NewTransaction extends Component {\r\n  constructor(porps) {\r\n    super(porps);\r\n    this.state = {\r\n      client: \"\",\r\n      value: \"\",\r\n      establishment: \"\",\r\n      description: \"\",\r\n      errorMensage: \"\",\r\n      transactions: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      transactions: JSON.parse(localStorage.getItem(\"transaction\")),\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    console.log(\"chegou 1\");\r\n    e.preventDefault();\r\n    this.validEmptyField();\r\n  }\r\n\r\n  validEmptyField() {\r\n    console.log(\"chegou 2\");\r\n    const state = this.state;\r\n\r\n    if (state.establishment === \"\") {\r\n      return this.setState({\r\n        errorMensage: \"Digite o numero do estabelecimento\",\r\n      });\r\n    }\r\n\r\n    if (state.client === \"\") {\r\n      this.setState({ errorMensage: \"Digite o numero do cliente\" });\r\n\r\n      return;\r\n    }\r\n    if (state.value === \"\") {\r\n      this.setState({ errorMensage: \"Digite o valor da compra\" });\r\n      return;\r\n    }\r\n    this.isValidCPF(state.client);\r\n  }\r\n\r\n  isValidCPF(cpf) {\r\n    console.log(\"chegou 3\");\r\n    if (typeof cpf !== \"string\") return false;\r\n    cpf = cpf.replace(/[\\s.-]*/gim, \"\");\r\n    if (cpf.length !== 11)\r\n      return this.setState({ errorMensage: \"CPF Incompleto\" });\r\n    if (\r\n      !cpf ||\r\n      cpf.length !== 11 ||\r\n      cpf === \"00000000000\" ||\r\n      cpf === \"11111111111\" ||\r\n      cpf === \"22222222222\" ||\r\n      cpf === \"=33333333333\" ||\r\n      cpf === \"44444444444\" ||\r\n      cpf === \"55555555555\" ||\r\n      cpf === \"66666666666\" ||\r\n      cpf === \"77777777777\" ||\r\n      cpf === \"88888888888\" ||\r\n      cpf === \"99999999999\"\r\n    ) {\r\n      this.setState({ errorMensage: \"Não caiu aqui\" });\r\n    }\r\n    var soma = 0;\r\n    var resto;\r\n    for (var i = 1; i <= 9; i++)\r\n      soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    resto = (soma * 10) % 11;\r\n    if (resto === 10 || resto === 11) resto = 0;\r\n    if (resto !== parseInt(cpf.substring(9, 10)))\r\n      return this.setState({\r\n        errorMensage: \"CPF inválido\",\r\n      });\r\n    soma = 0;\r\n    for (i = 1; i <= 10; i++)\r\n      soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    resto = (soma * 10) % 11;\r\n    if (resto === 10 || resto === 11) resto = 0;\r\n    if (resto !== parseInt(cpf.substring(10, 11)))\r\n      return this.setState({ errorMensage: \"CPF inválido\" });\r\n    // this.validarCNPJ(cnpj);\r\n    this.saveTransaction();\r\n  }\r\n\r\n  // validarCNPJ(cnpj) {\r\n  //   cnpj = cnpj.replace(/[^\\d]+/g, \"\");\r\n\r\n  //   if (cnpj === \"\") return false;\r\n\r\n  //   if (cnpj.length !== 14)\r\n  //     return this.setState({ errorMensage: \"CNPJ Incompleto\" });\r\n\r\n  //   // Elimina CNPJs invalidos conhecidos\r\n  //   if (\r\n  //     // cnpj === \"00000000000000\" ||\r\n  //     cnpj === \"11111111111111\" ||\r\n  //     cnpj === \"22222222222222\" ||\r\n  //     cnpj === \"33333333333333\" ||\r\n  //     cnpj === \"44444444444444\" ||\r\n  //     cnpj === \"55555555555555\" ||\r\n  //     cnpj === \"66666666666666\" ||\r\n  //     cnpj === \"77777777777777\" ||\r\n  //     cnpj === \"88888888888888\" ||\r\n  //     cnpj === \"99999999999999\"\r\n  //   )\r\n  //     return false;\r\n\r\n  //   // Valida DVs\r\n  //   var tamanho = cnpj.length - 2;\r\n  //   var numeros = cnpj.substring(0, tamanho);\r\n  //   var digitos = cnpj.substring(tamanho);\r\n  //   var soma = 0;\r\n  //   var pos = tamanho - 7;\r\n  //   for (var i = tamanho; i >= 1; i--) {\r\n  //     soma += numeros.charAt(tamanho - i) * pos--;\r\n  //     if (pos < 2) pos = 9;\r\n  //   }\r\n  //   var resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n  //   if (resultado !== digitos.charAt(0))\r\n  //     return this.setState({ errorMensage: \"CNPJ inválido\" });\r\n\r\n  //   tamanho = tamanho + 1;\r\n  //   numeros = cnpj.substring(0, tamanho);\r\n  //   soma = 0;\r\n  //   pos = tamanho - 7;\r\n  //   for (i = tamanho; i >= 1; i--) {\r\n  //     soma += numeros.charAt(tamanho - i) * pos--;\r\n  //     if (pos < 2) pos = 9;\r\n  //   }\r\n  //   resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);\r\n  //   if (resultado !== digitos.charAt(1))\r\n  //     return this.setState({ errorMensage: \"CNPJ inválido\" });\r\n\r\n  //   // return true;\r\n  //   this.saveTransaction();\r\n  // }\r\n\r\n  async saveTransaction() {\r\n    console.log(\"chegou 4\");\r\n    const newTransaction = {\r\n      value: this.state.value,\r\n      establishment: this.state.establishment,\r\n      client: this.state.client,\r\n      description: this.state.description,\r\n    };\r\n    await this.setState({\r\n      transactions: [...this.state.transactions, newTransaction],\r\n    });\r\n\r\n    this.setState({\r\n      value: \"\",\r\n      establishment: \"\",\r\n      client: \"\",\r\n      description: \"\",\r\n    });\r\n    this.saveStorage();\r\n  }\r\n\r\n  saveStorage() {\r\n    console.log(\"chegou 5\");\r\n    localStorage.setItem(\r\n      \"transaction\",\r\n      JSON.stringify(this.state.transactions)\r\n    );\r\n    this.notify();\r\n  }\r\n\r\n  notify() {\r\n    console.log(\"chegou 6\");\r\n    toast.success(\"🦄 Wow so easy!\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"newTransactionContainer\">\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={2000}\r\n          hideProgressBar\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <small>{this.state.errorMensage}</small>\r\n          <div className=\"divInput\">\r\n            <NumberFormat\r\n              label=\"Estabelecimento\"\r\n              customInput={TextField}\r\n              value={this.state.establishment}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  establishment: e.target.value,\r\n                  errorMensage: \"\",\r\n                })\r\n              }\r\n              className=\"input\"\r\n              format={\"##.###.###/####-##\"}\r\n            />\r\n\r\n            <NumberFormat\r\n              label=\"Cliente\"\r\n              customInput={TextField}\r\n              value={this.state.client}\r\n              onChange={(e) =>\r\n                this.setState({ client: e.target.value, errorMensage: \"\" })\r\n              }\r\n              className=\"input\"\r\n              format={\"###.###.###-##\"}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"divInput\">\r\n            <NumberFormat\r\n              label=\"Valor\"\r\n              customInput={TextField}\r\n              value={this.state.value}\r\n              onChange={(e) =>\r\n                this.setState({ value: e.target.value, errorMensage: \"\" })\r\n              }\r\n              className=\"input\"\r\n              prefix={\"R$\"}\r\n              decimalSeparator=\",\"\r\n              decimalScale={2}\r\n              allowNegative={false}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Descrição\"\r\n              className=\"input\"\r\n              value={this.state.description}\r\n              onChange={(e) =>\r\n                this.setState({ description: e.target.value, errorMensage: \"\" })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"divButton\">\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Finalizar venda\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              <Link to=\"/vendas\">Vendas realizadas</Link>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n        <footer>\r\n          <p>\r\n            Verificar{\" \"}\r\n            <a\r\n              style={{ color: \"blue \" }}\r\n              href=\"https://github.com/FelipeEduardoOliveira/Shipay\"\r\n              // target=\"_blank\"\r\n            >\r\n              Código fonte\r\n            </a>\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTransaction;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../styles/viewTransaction.css\";\r\n\r\nclass NewTransaction extends Component {\r\n  constructor(porps) {\r\n    super(porps);\r\n    this.state = {\r\n      transactions: [],\r\n      serachEstablishment: \"\",\r\n    };\r\n    this.showListTransaction = this.showListTransaction.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStorage();\r\n  }\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      \"transaction\",\r\n      JSON.stringify(this.state.transactions)\r\n    );\r\n  }\r\n  async getStorage() {\r\n    await this.setState({\r\n      transactions: JSON.parse(localStorage.getItem(\"transaction\")),\r\n    });\r\n  }\r\n  newArray(value) {\r\n    const array = this.state.transactions;\r\n    array.splice(value, 1);\r\n\r\n    this.setState({\r\n      transactions: array,\r\n    });\r\n  }\r\n  showListTransaction() {\r\n    const state = this.state;\r\n\r\n    if (state.serachEstablishment === \"\") {\r\n      return state.transactions.map((item, key) => {\r\n        return (\r\n          <tr key={key}>\r\n            <td>{item.establishment}</td>\r\n            <td>{item.client}</td>\r\n            <td>{item.value}</td>\r\n            <td>{item.description}</td>\r\n            <td onClick={() => this.newArray(key)}>Excluir</td>\r\n          </tr>\r\n        );\r\n      });\r\n    } else {\r\n      return state.transactions.map((item, key) => {\r\n        return state.serachEstablishment === item.establishment ? (\r\n          <tr key={key}>\r\n            <td>{item.establishment}</td>\r\n            <td>{item.client}</td>\r\n            <td>{item.value}</td>\r\n            <td>{item.description}</td>\r\n            <td onClick={() => this.newArray(key)}>Excluir</td>\r\n          </tr>\r\n        ) : (\r\n          \"\"\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  estabelecimento() {\r\n    const state = this.state;\r\n\r\n    return state.transactions.map((item, key) => {\r\n      return <option key={key}>{item.establishment}</option>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const list = this.showListTransaction();\r\n\r\n    return (\r\n      <div className=\"viewTransactionContainer\">\r\n        <div>\r\n          <input\r\n            className=\"findInput\"\r\n            list=\"browsers\"\r\n            onChange={(e) =>\r\n              this.setState({\r\n                serachEstablishment: e.target.value,\r\n              })\r\n            }\r\n            placeholder=\"Estabelecimento\"\r\n          />\r\n          <div>\r\n            <datalist id=\"browsers\">{this.estabelecimento()}</datalist>\r\n          </div>\r\n        </div>\r\n\r\n        <table>\r\n          <tr>\r\n            <th>Empresa</th>\r\n            <th>Cliente</th>\r\n            <th>Valor</th>\r\n            <th>Descrição</th>\r\n            <th>Deletar</th>\r\n          </tr>\r\n          {this.showListTransaction()}\r\n        </table>\r\n\r\n        <div className=\"divButton\">\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            <Link to=\"/\">Realizar Venda</Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTransaction;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport NewTransaction from \"./components/newTransaction\";\r\nimport ViewTransaction from \"./components/viewTransaction\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={NewTransaction} />\r\n        <Route exact path=\"/vendas\" component={ViewTransaction} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import Router from \"./Router\";\n\nfunction App() {\n  return (\n    <div>\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}